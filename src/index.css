#root {
  --colors-primary: #23687f;
  --colors-primary-dark: #1d4654;
  --colors-secondary: #a25308;
  --colors-secondary-dark: #78410d;

  --colors-background: #14262f;

  --base-size: 4;
}

body {
  background-color: #14262f;
  font-family: "Roboto", "Helvetica", "Arial", sans-serif;
}

i.primary {
  color: var(--colors-primary);
}

/* lets just use css variables for colors and other variables here 
  -- then create reusable components for buttons, inputs, etc
*/

/**
 * Reset CSS
 * 
 * A small set of CSS rules to help normalize styles across browsers.
 * 
 * @see https://www.joshwcomeau.com/css/custom-css-reset/
 */

/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* 2. Remove default margin */
* {
  margin: 0;
}
body {
  /* 3. Add accessible line-height */
  line-height: 1.5;
  /* 4. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}
/* 5. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/* 6. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}
/* 7. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/* 8. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}
